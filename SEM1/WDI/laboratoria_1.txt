#include <stdio.h>

int Zadanie1() {
    // urzytkownik wprowadza 3 liczby, zwraca największą.

    int x, y, z, biggest;
    printf("%s", "=== ZADANIE 1 === \n");
	
    printf("%s", "Enter first number \n");
    scanf("%d", &x);
	
    printf("%s", "Enter second number \n");
    scanf("%d", &y);
	
    printf("%s", "Enter third number \n");
    scanf("%d", &z);

    if (x > y && x > z) {
        biggest = x;
    } else if (y > x && y > z) {
        biggest = y;
    } else {
        biggest = z;
    }
    return biggest;
}

int Zadanie2() {

    int ax1, ax2, bx1, bx2, ay1, ay2, by1, by2, cx1, cx2, cy1, cy2;
    int intersectingArea;

    printf("%s", "=== ZADANIE 2 === \n");

    printf("%s", "Enter x1 number \n");
    scanf("%d", &ax1);

    printf("%s", "Enter y1 number \n");
    scanf("%d", &ay1);

    printf("%s", "Enter x2 number \n");
    scanf("%d", &ax2);

    printf("%s", "Enter y2 number \n");
    scanf("%d", &ay2);

    printf("%s", "Enter x3 number \n");
    scanf("%d", &bx1);

    printf("%s", "Enter y3 number \n");
    scanf("%d", &by1);

    printf("%s", "Enter x4 number \n");
    scanf("%d", &bx2);

    printf("%s", "Enter y4 number \n");
    scanf("%d", &by2);
	
	// znajduje lewy górny róg
	cx1 = Max(ax1, bx1); 
	cy1 = Min(ay1, by1); 

	//znajduje prawy dolny róg
	cx2 = Min(ax2, bx2); 
	cy2 = Max(ay2, by2); 

	// sprawdza, czy się przecinają, jeśli nie, zwraca 0. Wyciąga wartość absolutną aby nie mieć ujemnego pola.
 	intersectingArea = abs(Max(0, cx2 - cx1)) * abs(Max(0, cy1 - cy2));
 
	return intersectingArea;

}

// Zwraca mniejszą z dwóch wartości
int Min(x,y) {
    return(x < y ? x : y);
}

// Zwraca większą z dwóch wartości
int Max(x,y) {
    return(x > y ? x : y);
}

int Zadanie3() {
	
	printf("%s", "=== ZADANIE 3 === \n");

    int n;
    printf("%s", "Enter n \n");
    scanf("%d", &n);

    // Zaczynamy od 0 więc zamiast Fn+2 jest Fn+1
    return (Fibonacci(n+1)-1);
	
	/*
	Fn		= F(n+2) - F(n+1)
	F(n-1)	= F(n+1) - F(n)
	F(n-2)	= F(n)	 - F(n-1)
	...
	F(1)	= F(3)	 - F(2)
	--------------------------
	sum(f) = (Fn+2) - F(2)
	*/
}

int Fibonacci(int n) {

    if (n == 0) {
        return 0;
    } else if (n == 1) {
        return  1;
    } else {
        return Fibonacci(n-1) + Fibonacci(n-2);
    }
    
}

int main() {

//  zadanie 1
//  zwraca najwieksza wartosc z 3 podanych
	printf("%d", Zadanie1());

//  zadanie 2
//  zwraca pole przecinajace sie 2 trojkatow
    printf("%d", Zadanie2());

//  zadanie 3
//  zwraca sume pierwszych n elementów ciągu fibonacciego
	printf("%d", Zadanie3());

    return 0;
}
