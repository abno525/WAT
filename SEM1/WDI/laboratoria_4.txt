/*
1. oblicz silnie rekurencyjnie
2. wyszukiwanie binarne
3. N W D
4. sprawd≈∫ czy liczba jest pierwsza
*/

#include <stdio.h>
#include <math.h>

int zadanie1(const int n) {

    if (n < 0) return 0;
    if (n == 1 || n == 0) return 1;

    return n*zadanie1(n-1);
}

int zadanie2 (const int number, const int array[], const int size){
    int left = 0, mid, right = size - 1;

    while (left <= right) {
        mid =   floor((left + right)/2);
        if (array[mid] < number) {
            left = mid + 1;
        } else if (array[mid] > number) {
            right = mid - 1;
        } else {
            return mid;
        }
    }

    return -1;

}

// Algorytm Euklidesa
int zadanie3(int x, int y) {
    int temp;
    while (y != 0)
    {
        temp = x % y;

        x = y;
        y = temp;
    }
    return x;
}

int zadanie4(const int  number) {
    if (number <= 1) return 0;

    for (int i = 2; i*i <= number; i++) {
        if (number % i == 0) return 0;
    }

    return 1;
}


int main() {
    
//    int array[] = {1,2,3, 4, 5, 6, 7};
//    printf("%d",zadanie1(3));
//    printf("%d",zadanie2(7,array, 7));
//    printf("%d",zadanie3(100, 125));
//    printf("%d",zadanie4(7));

}
